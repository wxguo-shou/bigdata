#log4j.rootCategory=ERROR, console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.err
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d{yy/MM/ddHH:mm:ss} %p %c{1}: %m%n
## Set the default spark-shell log level to ERROR. When running the spark-shell,the
## log level for this class is used to overwrite the root logger's log level, sothat
## the user can have different defaults for the shell and regular Spark apps.
#log4j.logger.org.apache.spark.repl.Main=ERROR
## Settings to quiet third party logs that are too verbose
#log4j.logger.org.spark_project.jetty=ERROR
#log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle=ERROR
#log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper=ERROR
#log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter=ERROR
#log4j.logger.org.apache.parquet=ERROR
#log4j.logger.parquet=ERROR
#
## SPARK-9183: Settings to avoid annoying messages when looking up nonexistentUDFs in SparkSQL with Hive support
#log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler=FATAL
#log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry=ERROR


log4j.rootLogger=error, stdout,R
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-ddHH:mm:ss,SSS} %5p --- [%50t] %-80c(line:%5L) : %m%n
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=../log/agent.log
log4j.appender.R.MaxFileSize=1024KB
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-ddHH:mm:ss,SSS} %5p --- [%50t] %-80c(line:%6L) : %m%n
